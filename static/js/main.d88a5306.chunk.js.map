{"version":3,"sources":["modules/HeaderInfo/index.js","modules/HeaderInfo/HeaderInfo.js","modules/Seat/index.js","modules/Seat/Seat.js","data/mock/mock.js","utils/stringUtils.js","modules/SeatMap/SeatMap.js","modules/SeatMapWrapper/index.js","modules/SeatMapWrapper/SeatMapWrapper.js","modules/SeatInfo/index.js","modules/SeatInfo/SeatInfo.js","modules/TotalPrice/index.js","modules/TotalPrice/TotalPrice.js","pages/ReservedSeat/ReservedSeat.js","pages/ReservedSeat/index.js","serviceWorker.js","index.js"],"names":["HeaderInfo","className","Seat","React","memo","toggleSeat","disabled","seatRow","seatNumber","propsMemorized","useMemo","onClick","SEAT_TYPE","STANDARD","VIP","DELUXE","VIP_SEAT","DELUXE_SEAT","SEAT_PRICE","price","toString","replace","seatType","mock","seatKey","includes","selectedMap","Object","values","length","reduce","a","b","seatMap","map","row","rowIndex","rowTitle","String","fromCharCode","key","seat","isSelected","keys","uniqKey","stringUtils","type","num","SeatMapWrapper","defaultScale","zoomIn","zoomOut","resetTransform","Fragment","SeatMap","SeatInfo","TotalPrice","theater","time","date","id","reserved","index","ReservedSeat","useState","updatedSelectedMap","useCallback","seatIndex","temp","cloned","produce","draftSeatMap","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d88a5306.chunk.js","sourcesContent":["import HeaderInfo from './HeaderInfo';\n\nexport default HeaderInfo;\n","import React from 'react';\nimport \"./headerInfo.css\";\n\nexport default () => (\n    <div className={\"headerContainer\"}>\n        <h1 className={\"filmName\"}>Spider-man: Người Nhện xa nhà</h1>\n        <h2 className={\"theaterType\"}>C13 | 2D Vietnam Sub</h2>\n    </div>\n);\n","import Seat from './Seat';\n\nexport default Seat;\n","import React, {useMemo} from \"react\";\n\nexport default React.memo(({toggleSeat, disabled, className, seatRow, seatNumber}) => {\n    const propsMemorized = useMemo(() => ({disabled, className}), [disabled, className]);\n    return (\n        <button\n            className={propsMemorized.className}\n            disabled={propsMemorized.disabled}\n            onClick={() => {\n                toggleSeat({seatRow, seatNumber})\n            }}\n        >\n            {seatNumber}\n        </button>\n    )\n});\n","\nconst VIP_SEAT = [\"C4\",\"C5\", \"C6\", \"D4\", \"D5\", \"D6\", \"E4\",\"E5\", \"E6\"];\nconst DELUXE_SEAT = [\"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\"];\n\nconst SEAT_TYPE = {\n    STANDARD: \"STANDARD\",\n    VIP: \"VIP\",\n    DELUXE: \"DELUXE\"\n};\n\nconst SEAT_PRICE = {\n    [SEAT_TYPE.STANDARD]: 60000,\n    [SEAT_TYPE.VIP]: 90000,\n    [SEAT_TYPE.DELUXE]: 110000,\n};\n\nexport default {\n    VIP_SEAT,\n    DELUXE_SEAT,\n    SEAT_PRICE,\n    SEAT_TYPE\n};\n","import mock from \"../data/mock/mock\";\n\nconst getTypeFromData = seatKey => {\n    if (mock.VIP_SEAT.includes(seatKey)) {\n        return mock.SEAT_TYPE.VIP;\n    } else if (mock.DELUXE_SEAT.includes(seatKey)) {\n        return mock.SEAT_TYPE.DELUXE;\n    }\n    return mock.SEAT_TYPE.STANDARD;\n};\n\nconst getSeatClassNameFromType = seatType => {\n    if (seatType === mock.SEAT_TYPE.VIP) {\n        return \"vip\"\n    } else if (seatType === mock.SEAT_TYPE.DELUXE) {\n        return \"deluxe\";\n    }\n    return \"standard\";\n};\n\nconst getPriceFromType = seatType => mock.SEAT_PRICE[seatType];\n\nconst parsePrice = (price) => {\n    return price.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n};\n\nconst getTotalPrice = selectedMap => {\n    if(Object.values(selectedMap).length === 0) {\n        return 0;\n    }\n\n    return Object.values(selectedMap).reduce((a, b) => a + b);\n};\n\nexport default {\n    parsePrice,\n    getSeatClassNameFromType,\n    getTypeFromData,\n    getPriceFromType,\n    getTotalPrice\n};\n","// @flow\nimport React from 'react';\nimport Seat from '../Seat';\nimport \"./seatMap.css\";\nimport {stringUtils} from \"../../utils\";\n\nexport default ({seatMap, toggleSeat, selectedMap}) => {\n    return (\n        <div>\n            {seatMap.map((row, rowIndex) => {\n                const rowTitle = String.fromCharCode(rowIndex + 65);\n                return (\n                    <div className={\"seatRow\"} key={rowIndex}>\n                        <h3 className={\"rowTitle\"}>{rowTitle}</h3>\n                        {row.map((seat) => {\n                            const isSelected = Object.keys(selectedMap).includes(seat.key);\n                            const uniqKey = seat.key;\n                            const disabled = seat.disabled || (Object.keys(selectedMap).length === 6 && !isSelected);\n                            const className = `seat ${stringUtils.getSeatClassNameFromType(seat.type)} ${isSelected ? `tick` : `no-tick`} ${\n                                seat.disabled ? \"disabled\" : \"\"}`;\n\n                            return <Seat\n                                key={uniqKey}\n                                className={className}\n                                toggleSeat={toggleSeat}\n                                disabled={disabled}\n                                seatRow={rowIndex}\n                                seatNumber={seat.num}\n                            />\n                        })}\n                    </div>\n                )\n            })}\n        </div>\n    );\n}\n","import SeatMapWrapper from \"./SeatMapWrapper\";\n\nexport default SeatMapWrapper;\n","import React from 'react';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport SeatMap from \"../SeatMap/SeatMap\";\n\nexport default ({seatMap, toggleSeat, selectedMap}) => (\n    <TransformWrapper\n        defaultScale={1}\n    >\n        {({ zoomIn, zoomOut, resetTransform, ...rest }) => (\n            <React.Fragment>\n                <TransformComponent>\n                    <SeatMap\n                        seatMap={seatMap}\n                        toggleSeat={toggleSeat}\n                        selectedMap={selectedMap}\n                    />\n                </TransformComponent>\n            </React.Fragment>\n        )}\n    </TransformWrapper>\n)\n","import SeatInfo from \"./SeatInfo\";\n\nexport default SeatInfo;\n","import React from 'react';\nimport mock from '../../data/mock/mock';\nimport {stringUtils} from \"../../utils\";\nimport \"./seatInfo.css\";\n\nexport default () => (\n    <div className={\"wrapper\"}>\n        <div>\n            <div className={\"infoWrapper\"}>\n                <div className={\"infoSeat reservedSeat\"}/>\n                <span className={\"info\"}>Đã đặt</span>\n            </div>\n\n            <div className={\"infoWrapper\"}>\n                <div className={\"infoSeat reservingSeat\"}/>\n                <span className={\"info\"}>Đang đặt</span>\n            </div>\n        </div>\n\n        <div>\n            <div className={\"infoWrapper\"}>\n                <div className={\"infoSeat seat standard\"}/>\n                <span className={\"info\"}>\n                    {`${mock.SEAT_TYPE.STANDARD} - ${stringUtils.parsePrice(mock.SEAT_PRICE[mock.SEAT_TYPE.STANDARD])}`}\n                    <span className={\"priceSuffix\"}>đ</span>\n                </span>\n            </div>\n\n            <div className={\"infoWrapper\"}>\n                <div className={\"infoSeat seat vip\"}/>\n                <span className={\"info\"}>\n                    {`${mock.SEAT_TYPE.VIP} - ${stringUtils.parsePrice(mock.SEAT_PRICE[mock.SEAT_TYPE.VIP])}`}\n                    <span className={\"priceSuffix\"}>đ</span>\n                </span>\n            </div>\n\n            <div className={\"infoWrapper\"}>\n                <div className={\"infoSeat seat deluxe\"}/>\n                <span className={\"info\"}>\n                    {`${mock.SEAT_TYPE.DELUXE} - ${stringUtils.parsePrice(mock.SEAT_PRICE[mock.SEAT_TYPE.DELUXE])}`}\n                    <span className={\"priceSuffix\"}>đ</span>\n                </span>\n            </div>\n        </div>\n    </div>\n);\n","import TotalPrice from \"./TotalPrice\";\n\nexport default TotalPrice;\n","import React from 'react';\nimport {stringUtils} from \"../../utils\";\nimport \"./totalPrice.css\";\n\nexport default ({price, theater, time, date}) => (\n    <div className={\"priceInfoWrapper\"}>\n        <div className={\"priceInfo\"}>\n            <div className={\"flex\"}>\n                <p className={\"text\"}>{theater}</p>\n                <p className={\"text\"}>{`${time} | ${date}`}</p>\n            </div>\n            <div className={\"flex\"}>\n                <h2 className={\"text right\"}>{stringUtils.parsePrice(price)}<span className={\"priceSuffix\"}>đ</span></h2>\n            </div>\n        </div>\n        <div className={\"buttonWrapper\"}>\n            <button className={\"button\"}>Chọn Combo</button>\n            <button className={\"button\"}>Thanh Toán</button>\n        </div>\n    </div>\n);\n","import React, {useState, useCallback} from 'react';\nimport HeaderInfo from \"../../modules/HeaderInfo\";\nimport SeatMapWrapper from \"../../modules/SeatMapWrapper\";\nimport SeatInfo from \"../../modules/SeatInfo\";\nimport TotalPrice from \"../../modules/TotalPrice\";\n\nimport \"./reservedSeat.css\";\nimport produce from \"immer\";\nimport {stringUtils} from \"../../utils\";\n\n\nconst seatMap = [\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n    [{id: 1, reserved: false}, {id: 2, reserved: false}, {id: 3, reserved: false}, {\n        id: 4,\n        reserved: false\n    }, {id: 5, reserved: false}, {id: 6, reserved: false}, {id: 7, reserved: false}, {\n        id: 8,\n        reserved: false\n    }, {id: 9, reserved: false}],\n];\n\nconst mock = seatMap.map((row, index) => {\n    const rowTitle = String.fromCharCode(65 + index);\n    return row.map(seat => {\n        const key = `${rowTitle}${seat.id}`;\n        return ({\n            num: seat.id,\n            key,\n            disabled: seat.reserved,\n            type: stringUtils.getTypeFromData(key)\n        })\n    });\n});\n\nexport default () => {\n    const [selectedMap, updatedSelectedMap] = useState({});\n    const toggleSeat = useCallback(\n        seat => {\n            const rowIndex = seat.seatRow;\n            const seatIndex = seat.seatNumber - 1;\n            const temp = mock[rowIndex][seatIndex];\n            const cloned = produce(selectedMap, draftSeatMap => {\n                if(!Object.keys(draftSeatMap).includes(temp.key)) {\n                    draftSeatMap[temp.key] = stringUtils.getPriceFromType(temp.type);\n                } else {\n                    delete draftSeatMap[temp.key];\n                }\n            });\n            updatedSelectedMap(cloned);\n        }, [selectedMap]\n    );\n\n    return (\n        <div className=\"container\">\n            <HeaderInfo />\n            <div className={\"seatMapSection\"}>\n                <SeatMapWrapper\n                    seatMap={mock}\n                    toggleSeat={toggleSeat}\n                    selectedMap={selectedMap}\n                />\n            </div>\n            <SeatInfo/>\n            <TotalPrice\n                price={stringUtils.getTotalPrice(selectedMap)}\n                theater={\"CGV Crescent Mall\"}\n                time={\"9:10 - 12:00\"}\n                date={\"09/12/2019\"}/>\n        </div>\n    );\n}\n","import ReservedSeat from \"./ReservedSeat\";\n\nexport default ReservedSeat;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReservedSeat from './pages/ReservedSeat';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\";\n\nReactDOM.render(<ReservedSeat />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}